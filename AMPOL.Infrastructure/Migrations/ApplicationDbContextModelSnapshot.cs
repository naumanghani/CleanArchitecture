// <auto-generated />
using System;
using AMPOL.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AMPOL.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AMPOL.Domain.Entities.DiscountPromotion", b =>
                {
                    b.Property<string>("DiscountPromotionId")
                        .HasMaxLength(10)
                        .HasColumnType("char(10)");

                    b.Property<decimal>("DiscountPercent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PromotionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DiscountPromotionId");

                    b.ToTable("DiscountPromotions");

                    b.HasData(
                        new
                        {
                            DiscountPromotionId = "DP001",
                            DiscountPercent = 20m,
                            EndDate = new DateTime(2020, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PromotionName = "Fuel Discount Promo",
                            StartDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountPromotionId = "DP002",
                            DiscountPercent = 15m,
                            EndDate = new DateTime(2020, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PromotionName = "Happy Promo",
                            StartDate = new DateTime(2020, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AMPOL.Domain.Entities.PointsPromotion", b =>
                {
                    b.Property<string>("PointsPromotionId")
                        .HasMaxLength(10)
                        .HasColumnType("char(10)");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PointsPerDollar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("PromotionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PointsPromotionId");

                    b.ToTable("PointsPromotions");

                    b.HasData(
                        new
                        {
                            PointsPromotionId = "PP001",
                            Category = 0,
                            EndDate = new DateTime(2020, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PointsPerDollar = 2m,
                            PromotionName = "New Year Promo",
                            StartDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PointsPromotionId = "PP002",
                            Category = 1,
                            EndDate = new DateTime(2020, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PointsPerDollar = 3m,
                            PromotionName = "New Year Promo",
                            StartDate = new DateTime(2020, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PointsPromotionId = "PP003",
                            Category = 2,
                            EndDate = new DateTime(2020, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PointsPerDollar = 4m,
                            PromotionName = "Shop Promo",
                            StartDate = new DateTime(2020, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AMPOL.Domain.Entities.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .HasMaxLength(10)
                        .HasColumnType("char(10)");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("UnitPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = "PRD01",
                            Category = 1,
                            ProductName = "Vortex 95",
                            UnitPrice = 1.2m
                        },
                        new
                        {
                            ProductId = "PRD02",
                            Category = 1,
                            ProductName = "Vortex 98",
                            UnitPrice = 1.3m
                        },
                        new
                        {
                            ProductId = "PRD03",
                            Category = 1,
                            ProductName = "Diesel",
                            UnitPrice = 1.1m
                        },
                        new
                        {
                            ProductId = "PRD04",
                            Category = 2,
                            ProductName = "Twix 55g",
                            UnitPrice = 2.3m
                        },
                        new
                        {
                            ProductId = "PRD05",
                            Category = 2,
                            ProductName = "Mars 72g",
                            UnitPrice = 5.1m
                        },
                        new
                        {
                            ProductId = "PRD06",
                            Category = 2,
                            ProductName = "SNICKERS 72G ",
                            UnitPrice = 3.4m
                        },
                        new
                        {
                            ProductId = "PRD07",
                            Category = 2,
                            ProductName = "Bounty 3 63g",
                            UnitPrice = 6.9m
                        },
                        new
                        {
                            ProductId = "PRD08",
                            Category = 2,
                            ProductName = "Snickers 50g",
                            UnitPrice = 4m
                        });
                });

            modelBuilder.Entity("DiscountPromotionProduct", b =>
                {
                    b.Property<string>("DiscountPromotionsDiscountPromotionId")
                        .HasColumnType("char(10)");

                    b.Property<string>("ProductsProductId")
                        .HasColumnType("char(10)");

                    b.HasKey("DiscountPromotionsDiscountPromotionId", "ProductsProductId");

                    b.HasIndex("ProductsProductId");

                    b.ToTable("DiscountPromotionProduct");
                });

            modelBuilder.Entity("DiscountPromotionProduct", b =>
                {
                    b.HasOne("AMPOL.Domain.Entities.DiscountPromotion", null)
                        .WithMany()
                        .HasForeignKey("DiscountPromotionsDiscountPromotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AMPOL.Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
